{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","word","l","toLowerCase","charAt","toUpperCase","slice","cap","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","backgroundColor","heading","value","onChange","event","target","color","rows","newText","showAlert","split","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3861ff33.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const cap=(word)=>{\r\n    const l=word.toLowerCase();\r\n    return l.charAt(0).toUpperCase()+l.slice(1);\r\n  }\r\n  return (\r\n\r\n(props.alert) && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n<strong>{cap(props.alert.type)}</strong>:{props.alert.msg}\r\n\r\n</div>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n        </li>\r\n      </ul>\r\n      {/*<form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-danger\" type=\"submit\">Search</button>\r\n  </form>*/}\r\n      <div className={`form-check form-switch ${props.mode=='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={title:PropTypes.string,\r\n  aboutText:PropTypes.string\r\n}\r\nNavbar.defaultProps={\r\n  title:\"Set title here\",\r\n  aboutText:\"About\"\r\n}","import React ,{useState} from 'react'\r\n  // Declare a new state variable, which we'll call \"count\"\r\n \r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\" converted to Upper case\", \"success\")\r\n    }\r\n    const handlLoClick=()=>{\r\n\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\" converted to Lower case\", \"success\")\r\n    }\r\n    const handleClear=()=>{\r\n\r\n        let newText=\"\";\r\n        setText(newText)\r\n        props.showAlert(\" Cleared\", \"success\")\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    \r\n  return (\r\n    <>\r\n<div className=\"container\" style={{backgroundColor:props.mode=='light'?'white':'blue'}}>\r\n    <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n<label htmlFor=\"mybox\" >Example textarea</label>\r\n<textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode=='dark'?'grey':'white',color:props.mode=='dark'?'white':'blue'}}id=\"mybox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handlLoClick}>Convert to lowercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear</button>\r\n</div>\r\n<div className=\"container my-3\" style={{color:props.mode=='dark'?'white':'black'}}>\r\n    <h1>Your text summary</h1>\r\n    <p>{text.split(\" \").length} words and {text.length} 34566 characters</p>\r\n    <p>{0.008*text.split(\" \").length} read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter something in the textbox to preview\"}</p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Alert from './components/Alert.js';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport React, { useState } from 'react'\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n  const toggleMode=()=>{\n    if(mode ==='light'){\n      setMode('dark');\n      document.title='TextUtils: Light Mode'\n      document.body.style.backgroundColor='blue'\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      setInterval(()=>{\n        document.title='TextUtils is cool'\n      },2000)\n      setInterval(()=>{\n        document.title='TextUtils is fantastic'\n      },3000)\n      }\n      else{\n        setMode('light');\n        document.title='TextUtils: Dark Mode'\n        document.body.style.backgroundColor='white'\n        showAlert(\"Light mode has been enabled\",\"success\");\n        setInterval(()=>{\n          document.title='TextUtils is cool'\n        },2000)\n        setInterval(()=>{\n          document.title='TextUtils is fantastic'\n        },3000)\n      }\n  }\n  return (\n    <>\n    {/* <Router> */}\n            {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/> */}\n            <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n            <Alert alert={alert}/>\n            <div className=\"container my-3\">\n            {/* <Routes>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route exact path=\"/\"> */}\n                  <TextForm showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode}/>\n                {/* </Route>\n            </Routes>  */}\n            </div>\n      {/* </Router>  */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}